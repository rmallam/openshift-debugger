apiVersion: v1
kind: ConfigMap
metadata:
  name: tcpdump-ui-frontend-nginx-conf
data:
  default.conf: |
    # nginx.conf
    worker_processes auto;
    pid /tmp/nginx.pid;
    events {
    worker_connections 1024;
    }

    http {
    include /etc/nginx/mime.types; 
    client_body_temp_path /tmp/client_temp;
    proxy_temp_path       /tmp/proxy_temp_path;
    fastcgi_temp_path     /tmp/fastcgi_temp;
    uwsgi_temp_path       /tmp/uwsgi_temp;
    scgi_temp_path        /tmp/scgi_temp;

    server {
      listen 8080;
      charset utf-8;
      sendfile on;
      server_name _;
      index index.html;
      error_log  /tmp/error.log;
      access_log /tmp/access.log;
      location / {
        root /usr/share/nginx/html;
        expires -1;
        add_header Pragma "no-cache";
        add_header Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0";
        try_files $uri /index.html =404;
      }
      location /tcpdump {
        proxy_pass http://tcpdump-ui-backend:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_intercept_errors on;
        error_page 502 503 504 = /backend-unavailable.html;
      }
      location /ws/tcpdump {
        proxy_pass http://tcpdump-ui-backend:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_read_timeout 3600;
      }
      location /ncat {
        proxy_pass http://tcpdump-ui-backend:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_intercept_errors on;
        error_page 502 503 504 = /backend-unavailable.html;
      }
      location = /backend-unavailable.html {
        default_type text/html;
        return 503 '<html><body><h2>Backend unavailable</h2><p>The backend service is not reachable. Please try again later.</p></body></html>';
      }
    }
    }